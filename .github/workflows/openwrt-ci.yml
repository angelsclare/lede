name: Build OpenWrt Firmware for HiWiFi HC5861 with SSR Plus

on:
  schedule:
    - cron: '0 20 * * *'
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build_openwrt:
    name: Build OpenWrt Firmware for HiWiFi HC5861 Minimal SSR Plus
    runs-on: ubuntu-22.04

    steps:
      - name: Setup build environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential libncurses5-dev gawk git subversion \
            unzip zlib1g-dev libssl-dev wget python3 python3-distutils \
            curl ccache gettext libz-dev file
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Checkout OpenWrt source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone helloworld package (luci-app-ssr-plus)
        run: |
          git clone --depth=1 https://github.com/fw876/helloworld.git package/helloworld

      - name: Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure build for HC5861 with SSR Plus
        run: |
          echo "CONFIG_TARGET_ramips=y" > .config
          echo "CONFIG_TARGET_ramips_mt7620=y" >> .config
          echo "CONFIG_TARGET_ramips_mt7620_DEVICE_hiwifi_hc5861=y" >> .config
      
          echo "CONFIG_PACKAGE_luci=y" >> .config
          echo "CONFIG_PACKAGE_luci-base=y" >> .config
          echo "CONFIG_PACKAGE_luci-ssl=y" >> .config
          echo "CONFIG_PACKAGE_luci-i18n-base-zh-cn=y" >> .config
      
          echo "CONFIG_PACKAGE_shadowsocks-libev-ss-local=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-ssr-plus=y" >> .config
      
          echo "CONFIG_PACKAGE_ipv6helper=n" >> .config
          echo "CONFIG_PACKAGE_luci-proto-ipv6=n" >> .config
          echo "CONFIG_PACKAGE_odhcp6c=n" >> .config
          echo "CONFIG_PACKAGE_odhcpd-ipv6only=n" >> .config
      
          echo "CONFIG_PACKAGE_kmod-usb-core=n" >> .config
          echo "CONFIG_PACKAGE_kmod-usb-ohci=n" >> .config
          echo "CONFIG_PACKAGE_kmod-usb2=n" >> .config
          echo "CONFIG_PACKAGE_kmod-usb-storage=n" >> .config
          echo "CONFIG_PACKAGE_kmod-fs-ext4=n" >> .config
          echo "CONFIG_PACKAGE_block-mount=n" >> .config
          echo "CONFIG_PACKAGE_mount-utils=n" >> .config
      
          echo "CONFIG_KERNEL_DEBUG_INFO=n" >> .config
          echo "CONFIG_STRIP_KERNEL_EXPORTS=y" >> .config
      
          echo "CONFIG_TARGET_IMAGES_GZIP=y" >> .config
          echo "CONFIG_TARGET_ROOTFS_SQUASHFS=y" >> .config
          echo "CONFIG_TARGET_ROOTFS_IMAGES=squashfs" >> .config

          echo "CONFIG_BUSYBOX_CUSTOM=y" >> .config
          echo "CONFIG_BUSYBOX_CONFIG_FEATURE_IPV6=n" >> .config
      
          make defconfig


      - name: Remove unnecessary language packs to save space
        run: |
          find feeds/luci/modules/luci-base/po/ -maxdepth 1 -type d ! -name "zh-cn" ! -name "po" -exec rm -rf {} +
          find feeds/luci/applications/ -type d -path "*/po/*" ! -name "zh-cn" -exec rm -rf {} +

      - name: Download all required packages
        run: make download -j$(nproc)

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Prepare artifacts (firmware + packages)
        run: |
          mkdir -p ./artifact
          tar -czf ./artifact/firmware.tar.gz -C ./bin/targets .
          mkdir -p ./artifact/package
          find ./bin/packages/ -type f -name "*.ipk" -exec cp -f {} ./artifact/package/ \; || true

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./artifact/firmware.tar.gz

      - name: Upload packages artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_packages
          path: ./artifact/package/
